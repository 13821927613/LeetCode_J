/*给定一个数组 nums 和一个值 val，你需要原地移除所有数值等于 val 的元素，返回移除后数组的新长度。
不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。
元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。
示例 1:
给定 nums = [3, 2, 2, 3], val = 3,
函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。
你不需要考虑数组中超出新长度后面的元素。
示例 2:
给定 nums = [0, 1, 2, 2, 3, 0, 4, 2], val = 2,
函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。
注意这五个元素可为任意顺序。
你不需要考虑数组中超出新长度后面的元素。*/
package Array;

public class removeElement 
{
	public static int remove(int[] nums, int val)
	{
		int len_res = 0, len = nums.length;
		int i, j;
		for (i = 0; i < len && nums[i] != val; i++)
			len_res++;
		for (j = i + 1; j < len && nums[j] == val; j++);
		while(j < len)
		{
			if (nums[j] != val)
			{
				nums[i++] = nums[j++];
				len_res++;
			}
			else
				j++;
		}
		return len_res;
	}

	public static void main(String[] args) 
	{
		int[] nums = {0,4,4,0,4,4,4,0,2};
		int val = 4;
		int len = remove(nums, val);
		System.out.println("len = " + len);
		for (int i = 0; i < len; i ++)
			System.out.print(nums[i] + " ");
	}

}
